<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.youxin.mapper.EmployeeMapper">
    
    <resultMap id="EmployeeMap" type="Employee">
        <!-- column是查询结果的列名, property是对应实体类中的属性名 -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="lastName" jdbcType="VARCHAR" property="lastName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="departmentId" jdbcType="INTEGER" property="departmentId"/>
        <result column="birth" jdbcType="DATE" property="birth"/>
        <!-- 多表查询时连接department属性段 -->
        <association property="department" javaType="Department" >
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="departmentName" jdbcType="VARCHAR" property="departmentName"/>
        </association>

    </resultMap>


    <select id="findAllEmployees" resultMap="EmployeeMap">
        select * from employee join department on departmentId = department.id order by employee.id
    </select>

    <select id="getEmployeeById" resultMap="EmployeeMap" parameterType="int">
        select * from employee join department  on departmentId = department.id where employee.id = #{id}
    </select>

    <delete id="delEmployee" parameterType="int">
        delete from employee where id = #{id}
    </delete>

    <insert id="insEmployee" parameterType="Employee">
        insert into employee (lastName, email, gender, departmentId, birth)
        values (#{lastName},#{email},#{gender},#{departmentId},#{birth})
    </insert>

    <update id="updEmployee" parameterType="Employee">
        update employee set lastName=#{lastName},email=#{email},gender=#{gender},departmentId=#{departmentId},birth=#{birth}
        where id=#{id}
    </update>
</mapper>